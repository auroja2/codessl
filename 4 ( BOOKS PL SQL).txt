1. CREATE DATABASE 

CREATE TABLE Borrower (
    Roll_no INT PRIMARY KEY,
    Name_of_Book VARCHAR(100),
    Date_of_Issue DATE,
    Status CHAR(1) -- 'I' for Issued, 'R' for Returned
);

CREATE TABLE Fine (
    Roll_no INT,
    Date DATE,
    Amt DECIMAL(10, 2)
);


2.EXECUTE GIVEN COMMAND

DELIMITER $$

CREATE PROCEDURE CalculateFineAndUpdateStatus(IN p_roll_no INT, IN p_name_of_book VARCHAR(100))
BEGIN
    DECLARE v_date_of_issue DATE;
    DECLARE v_days_overdue INT;
    DECLARE v_fine_amount DECIMAL(10, 2) DEFAULT 0;

       SELECT Date_of_Issue INTO v_date_of_issue
    FROM Borrower
    WHERE Roll_no = p_roll_no AND Name_of_Book = p_name_of_book
    LIMIT 1;

    IF v_date_of_issue IS NULL THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'No record found for the given Roll_no and Book name.';
    END IF;


    SET v_days_overdue = DATEDIFF(CURRENT_DATE, v_date_of_issue);

    
    IF v_days_overdue > 30 THEN
        SET v_fine_amount = (v_days_overdue - 30) * 50 + (30 * 5);
    ELSEIF v_days_overdue >= 15 THEN
        SET v_fine_amount = v_days_overdue * 5;
    ELSE
        SET v_fine_amount = 0; -- No fine for days less than 15
    END IF;


    IF v_fine_amount > 0 THEN
        INSERT INTO Fine (Roll_no, Date, Amt)
        VALUES (p_roll_no, CURRENT_DATE, v_fine_amount);
    END IF;


    UPDATE Borrower
    SET Status = 'R'
    WHERE Roll_no = p_roll_no AND Name_of_Book = p_name_of_book;

 
    COMMIT;

  END $$

DELIMITER ;

















DELIMITER $$

CREATE PROCEDURE CalculateFineAndUpdateStatus(IN p_roll_no INT, IN p_name_of_book VARCHAR(100))
BEGIN
    DECLARE v_date_of_issue DATE;
    DECLARE v_days_overdue INT;
    DECLARE v_fine_amount DECIMAL(10, 2) DEFAULT 0;

    -- Retrieve the Date_of_Issue from Borrower table
    SELECT Date_of_Issue INTO v_date_of_issue
    FROM Borrower
    WHERE Roll_no = p_roll_no AND Name_of_Book = p_name_of_book
    LIMIT 1;

    -- Check if no record was found
    IF v_date_of_issue IS NULL THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'No record found for the given Roll_no and Book name.';
    END IF;

    -- Calculate the number of days overdue
    SET v_days_overdue = DATEDIFF(CURRENT_DATE, v_date_of_issue);

    -- Determine the fine amount based on overdue days
    IF v_days_overdue > 30 THEN
        SET v_fine_amount = (v_days_overdue - 30) * 50 + (30 * 5);
    ELSEIF v_days_overdue >= 15 THEN
        SET v_fine_amount = v_days_overdue * 5;
    ELSE
        SET v_fine_amount = 0; -- No fine for days less than 15
    END IF;

    -- If there is a fine, insert it into the Fine table
    IF v_fine_amount > 0 THEN
        INSERT INTO Fine (Roll_no, Date, Amt)
        VALUES (p_roll_no, CURRENT_DATE, v_fine_amount);
    END IF;

    -- Update the Borrower table to change Status from 'I' to 'R' (Returned)
    UPDATE Borrower
    SET Status = 'R'
    WHERE Roll_no = p_roll_no AND Name_of_Book = p_name_of_book;

    -- Commit changes
    COMMIT;

    -- Output the result
    SELECT 'Fine calculated and status updated successfully.' AS Message;

END $$

DELIMITER ;

